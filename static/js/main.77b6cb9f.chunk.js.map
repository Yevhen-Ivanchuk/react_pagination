{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","page","onPageChange","onPrevPage","onNextPage","useState","withInfo","setWithInfo","useSearchParams","searchParams","pages","useMemo","Math","ceil","useEffect","start","end","visiblePageNumbers","pageNumbers","Array","from","map","_","i","startIndex","slice","endIndex","length","splice","concat","className","to","toString","classNames","disabled","onClick","number","active","random","App","setPerPage","setPage","setSearchParams","set","htmlFor","id","name","value","onChange","event","target","path","element","currentPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77b6cb9f.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './Pagination.css';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  page: number;\n  onPageChange: (number: number | string) => void;\n  onPrevPage: () => void;\n  onNextPage: () => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, page, onPageChange, onPrevPage, onNextPage,\n}) => {\n  const [withInfo, setWithInfo] = useState('');\n\n  const [searchParams] = useSearchParams();\n\n  const pages: number = useMemo(() => {\n    return Math.ceil(total / perPage);\n  }, [perPage]);\n\n  useEffect(() => {\n    const start = (page === 1) ? page : (page - 1) * perPage + 1;\n    const end = (page === pages) ? total : page * perPage;\n\n    setWithInfo(`Page ${page} (items ${start} - ${end} of ${total})`);\n  }, [page, pages, total, perPage]);\n\n  const getVisiblePageNumbers = () => {\n    const pageNumbers: number[] = Array.from(Array(pages)).map((_, i) => i + 1);\n    const startIndex: (number | string)[] = pageNumbers.slice(0, page - 1);\n    const endIndex: (number | string)[] = pageNumbers.slice(page);\n    const dots = '...';\n    const result:(number | string)[] = [];\n\n    if (startIndex.length > 2) {\n      startIndex.splice(1, startIndex.length - 2, dots);\n    }\n\n    if (endIndex.length > 2) {\n      endIndex.splice(1, endIndex.length - 2, dots);\n    }\n\n    return result.concat(startIndex, page, endIndex);\n  };\n\n  const visiblePageNumbers = useMemo(\n    getVisiblePageNumbers,\n    [page, pages],\n  );\n\n  return (\n    <>\n      <div className=\"pagination-info\" data-cy=\"info\">{withInfo}</div>\n\n      <ul className=\"pagination-list\">\n        <li className=\"pagination-item\">\n          <Link\n            to={`/?${searchParams.toString()}`}\n            className={classNames('pagination-link', { disabled: page === 1 })}\n            onClick={onPrevPage}\n          >\n            <span>\n              &laquo;\n            </span>\n          </Link>\n        </li>\n        {visiblePageNumbers.map(number => (\n          <li className=\"pagination-item\" key={Math.random()}>\n            <Link\n              to={`/?${searchParams.toString()}`}\n              className={classNames(\n                'pagination-link',\n                {\n                  active: page === number,\n                  disabled: typeof number !== 'number',\n                },\n              )}\n              onClick={() => onPageChange(number)}\n            >\n              {number}\n            </Link>\n          </li>\n        ))}\n        <li className=\"pagination-item\">\n          <Link\n            to={`/?${searchParams.toString()}`}\n            className={classNames('pagination-link', { disabled: page === pages })}\n            onClick={onNextPage}\n          >\n            <span>\n              &raquo;\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport { Routes, Route, useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst App: React.FC = () => {\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    searchParams.set('page', `${page}`);\n    searchParams.set('perPage', `${perPage}`);\n    setSearchParams(searchParams);\n  }, [page, perPage]);\n\n  const pageChange = (number: number | string) => {\n    if (typeof number === 'string') {\n      return;\n    }\n\n    setPage(number);\n  };\n\n  const prevPage = () => {\n    setPage(currentPage => currentPage - 1);\n  };\n\n  const nextPage = () => {\n    setPage(currentPage => currentPage + 1);\n  };\n\n  const handlePerPageChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"pagination\">\n      <h1 className=\"pagination-title\">Pagination</h1>\n\n      <label htmlFor=\"pagination-select\">\n        Number of pages:\n        <select\n          id=\"pagination-select\"\n          className=\"pagination-select\"\n          name=\"perPage\"\n          value={perPage}\n          onChange={handlePerPageChange}\n          data-cy=\"perPageSelector\"\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </label>\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={(\n            <Pagination\n              total={total}\n              perPage={perPage}\n              page={page}\n              onPageChange={pageChange}\n              onPrevPage={prevPage}\n              onNextPage={nextPage}\n            />\n          )}\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}